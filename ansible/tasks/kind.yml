---

- name: Query ec2 public dns name
  shell: |
    # aws api to return vm public dns name
    curl -s http://169.254.169.254/latest/meta-data/public-hostname | cut -d'.' -f1
  register: output
  when: vm_provider is defined and vm_provider == "aws"

- name: Set kind cluster base name
  set_fact:
    hostname_base: "{{ output.stdout }}"
  when: vm_provider is defined and vm_provider == "aws"

- name: Set the kind base name using the baremetal hostname
  set_fact:
    hostname_base: "{{ inventory_hostname | regex_replace('[a-zA-Z]\\.(.*)', '') }}"
  when: vm_provider is defined and vm_provider == "baremetal"

- name: Host name
  command: "hostname"
  register: command_output

- name: Set the kind base name using the openstack vm inventory hostname
  set_fact:
    # hostname_base: "{{ inventory_hostname }}"
    hostname_base: "{{ command_output.stdout }}"
  when: vm_provider is defined and vm_provider == "openstack"

# - name: Create Kind Reserved Config
#   shell: |
#     cat > /tmp/kind-config.yaml <<EOF
#     kind: Cluster
#     apiVersion: kind.x-k8s.io/v1alpha4
#     nodes:
#     - role: control-plane
#       kubeadmConfigPatches:
#       - |
#         kind: InitConfiguration
#         nodeRegistration:
#           kubeletExtraArgs:
#             system-reserved: memory=8Gi,cpu=1
#     EOF
#   when: False

- name: Docker login to track rate limit usage
  shell: |
    docker login -u="{{ DOCKER_USER }}" -p="{{ DOCKER_PASSWORD }}"

- name: Create Kind Cluster
  shell: |
    kind get clusters | grep kind-{{ item }} || kind create cluster --name kind-{{ item }}
  register: output

- name: Debug the create output
  debug:
    msg: "{{ output }}"

- name: Create directory for kind cluster kubeconfig
  file:
    dest: "/home/centos/{{ hostname_base }}-kind-{{ item }}"
    state: directory

- name: Save Kind kubeconfig to /home/centos/
  shell: |
    kind get kubeconfig --name=kind-{{ item }} > /tmp/{{ hostname_base }}-kind-{{ item }}/kubeconfig

# - name: Create 4K configmaps
#   k8s:
#     state: present
#     kubeconfig: "/tmp/{{ hostname_base }}-kind-{{ item }}/kubeconfig"
#     definition: "{{ lookup('template', '{{ playbook_dir }}/files/cm400.yml')}}"
#   loop: "{{ range(0, configmap_max_count, 1)|list }}"
#   loop_control:
#     loop_var: inner
#   tags: focus
