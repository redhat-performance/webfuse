---
# Prepare the shiftstack RHACM hub cluster for cluster provisioning scale testing
# by preparing install-config.yaml, clouds.yaml , cluster-deployment.yaml, and
# managed cluster objects.

- name: Create clusterdeployments directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - /home/stack/clusterdeployments
    - /home/stack/clusterdeployments/all
    - /home/stack/clusterdeployments/all/deploy
    - /home/stack/clusterdeployments/all/delete
    - /home/stack/clusterdeployments/configs
    - "/home/stack/clusterdeployments/configs/{{ rhacm_clusterdeployment_name }}/"

- name: Create api floating ip
  shell: |
    source /home/stack/overcloudrc
    openstack floating ip create {{ shiftstack_clusterdeploy_public_net_name }} -f value -c floating_ip_address
  register: api_fip

- name: Create ingress floating ip
  shell: |
    source /home/stack/overcloudrc
    openstack floating ip create {{ shiftstack_clusterdeploy_public_net_name }} -f value -c floating_ip_address
  register: ingress_fip

- name: Assign API/Ingress FIPs
  set_fact:
    api_floating_ip: "{{ api_fip.stdout }}"
    ingress_floating_ip: "{{ ingress_fip.stdout }}"

- name: Debug print api/ingress addresses
  debug:
    msg:
      - "{{ api_floating_ip }}"
      - "{{ ingress_floating_ip }}"

- name: Get OpenStack auth url
  shell: |
    source /home/stack/overcloudrc
    openstack endpoint list --service keystone --interface public --format value -c URL
  register: clouds_yaml_auth_url

- name: Get OpenStack username
  shell: |
    source /home/stack/overcloudrc
    echo "${OS_USERNAME}"
  register: clouds_yaml_username

- name: Get OpenStack password
  shell: |
    source /home/stack/overcloudrc
    echo "${OS_PASSWORD}"
  register: clouds_yaml_password

- name: Get OpenStack user domain
  shell: |
    source /home/stack/overcloudrc
    openstack user show ${OS_USERNAME} --format value -c domain_id
  register: clouds_yaml_user_domain_name

- name: Get OpenStack project name
  shell: |
    source /home/stack/overcloudrc
    echo "${OS_PROJECT_NAME}"
  register: clouds_yaml_project_name

- name: Get OpenStack project domain name
  shell: |
    source /home/stack/overcloudrc
    echo "${OS_PROJECT_DOMAIN_NAME}"
  register: clouds_yaml_project_domain_name

- name: Read ssh public key file
  slurp:
    src: /home/stack/.ssh/id_rsa.pub
  register: ssh_pub_key_content

- name: Set ssh_public_key fact
  set_fact:
    ssh_public_key: "{{ ssh_pub_key_content['content'] | b64decode }}"

- name: Read ssh private key file
  slurp:
    src: /home/stack/.ssh/id_rsa
  register: ssh_pri_key_content

- name: Get rhacm hub cluster pull-secret
  shell: |
    KUBECONFIG={{ rhacm_clusterdeploy_hub_cluster_kubeconfig }} oc get secret -n openshift-config pull-secret -o json
  register: cluster_pull_secret

- name: Convert cluster_pull_secret to json
  set_fact:
    cluster_pull_secret_json: "{{ cluster_pull_secret['stdout'] | from_json }}"

- name: Set clusterdeployment_pull_secret
  set_fact:
    clusterdeployment_pull_secret: "{{ cluster_pull_secret_json['data']['.dockerconfigjson'] }}"

- name: Add DNS detail in /etc/hosts on the orchestration machine
  blockinfile:
    path: "/etc/hosts"
    backup: true
    block: |
        {{ api_floating_ip }} api.{{ rhacm_clusterdeployment_name }}.{{ rhacm_clusterdeploy_base_domain }}
        {{ ingress_floating_ip }} oauth-openshift.apps.{{ rhacm_clusterdeployment_name }}.{{ rhacm_clusterdeploy_base_domain }}
        {{ ingress_floating_ip }} console-openshift-console.apps.{{ rhacm_clusterdeployment_name }}.{{ rhacm_clusterdeploy_base_domain }}
        {{ ingress_floating_ip }} downloads-openshift-console.apps.{{ rhacm_clusterdeployment_name }}.{{ rhacm_clusterdeploy_base_domain }}
        {{ ingress_floating_ip }} alertmanager-main-openshift-monitoring.apps.{{ rhacm_clusterdeployment_name }}.{{ rhacm_clusterdeploy_base_domain }}
        {{ ingress_floating_ip }} grafana-openshift-monitoring.apps.{{ rhacm_clusterdeployment_name }}.{{ rhacm_clusterdeploy_base_domain }}
        {{ ingress_floating_ip }} prometheus-k8s-openshift-monitoring.apps.{{ rhacm_clusterdeployment_name }}.{{ rhacm_clusterdeploy_base_domain }}
        {{ ingress_floating_ip }} thanos-querier-openshift-monitoring.apps.{{ rhacm_clusterdeployment_name }}.{{ rhacm_clusterdeploy_base_domain }}
    insertafter: "EOF"
    marker: "# {mark} {{ rhacm_clusterdeployment_name }} OCP CLUSTER MANAGED BLOCK"
  become: yes
  become_user: root
  throttle: 1

- name: Prepare Cluster Deployment configuration files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - src: install-config.yaml.j2
      dest: "/home/stack/clusterdeployments/configs/{{ rhacm_clusterdeployment_name }}/install-config.yaml"
    - src: clouds.yaml.j2
      dest: "/home/stack/clusterdeployments/configs/{{ rhacm_clusterdeployment_name }}/clouds.yaml"
    - src: cluster-deployment.yaml.j2
      dest: "/home/stack/clusterdeployments/configs/{{ rhacm_clusterdeployment_name }}/cluster-deployment.yaml"
    - src: deletable-cluster-deployment.yaml.j2
      dest: "/home/stack/clusterdeployments/configs/{{ rhacm_clusterdeployment_name }}/deletable-cluster-deployment.yaml"

- name: Copy cluster-deployment and deletable configs into all directory
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    remote_src: yes
  with_items:
    - src: "/home/stack/clusterdeployments/configs/{{ rhacm_clusterdeployment_name }}/cluster-deployment.yaml"
      dest: "/home/stack/clusterdeployments/all/deploy/{{ rhacm_clusterdeployment_name }}-cluster-deployment.yaml"
    - src: "/home/stack/clusterdeployments/configs/{{ rhacm_clusterdeployment_name }}/deletable-cluster-deployment.yaml"
      dest: "/home/stack/clusterdeployments/all/delete/{{ rhacm_clusterdeployment_name }}-deletable-cluster-deployment.yaml"
