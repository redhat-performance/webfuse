---
# Prepare the shiftstack RHACM hub cluster for cluster provisioning scale testing
# by preparing install-config.yaml, clouds.yaml , cluster-deployment.yaml, and
# managed cluster objects.

- name: Create clusterdeployment config directory for each cluster
  file:
    path: "/home/stack/clusterdeployments/configs/{{ rhacm_clusterdeployment_name }}/"
    state: directory

- name: Create api floating ip
  shell: |
    source /home/stack/overcloudrc
    openstack floating ip create {{ shiftstack_clusterdeploy_public_net_name }} -f value -c floating_ip_address
  register: api_fip

- name: Create ingress floating ip
  shell: |
    source /home/stack/overcloudrc
    openstack floating ip create {{ shiftstack_clusterdeploy_public_net_name }} -f value -c floating_ip_address
  register: ingress_fip
  when: rhacm_clusterdeploy_create_ingress

- name: Assign API FIP
  set_fact:
    api_floating_ip: "{{ api_fip.stdout }}"

- name: Assign Ingress FIP
  set_fact:
    ingress_floating_ip: "{{ ingress_fip.stdout }}"
  when: rhacm_clusterdeploy_create_ingress

- name: Debug print api address
  debug:
    msg: "{{ api_floating_ip }}"

- name: Debug print ingress address
  debug:
    msg: "{{ ingress_floating_ip }}"
  when: rhacm_clusterdeploy_create_ingress

- name: Add DNS detail in /etc/hosts on the orchestration machine
  blockinfile:
    path: "/etc/hosts"
    backup: true
    block: |
        {{ api_floating_ip }} api.{{ rhacm_clusterdeployment_name }}.{{ rhacm_clusterdeploy_base_domain }}
        {% if rhacm_clusterdeploy_create_ingress %}
        {{ ingress_floating_ip }} oauth-openshift.apps.{{ rhacm_clusterdeployment_name }}.{{ rhacm_clusterdeploy_base_domain }}
        {{ ingress_floating_ip }} console-openshift-console.apps.{{ rhacm_clusterdeployment_name }}.{{ rhacm_clusterdeploy_base_domain }}
        {{ ingress_floating_ip }} downloads-openshift-console.apps.{{ rhacm_clusterdeployment_name }}.{{ rhacm_clusterdeploy_base_domain }}
        {{ ingress_floating_ip }} alertmanager-main-openshift-monitoring.apps.{{ rhacm_clusterdeployment_name }}.{{ rhacm_clusterdeploy_base_domain }}
        {{ ingress_floating_ip }} grafana-openshift-monitoring.apps.{{ rhacm_clusterdeployment_name }}.{{ rhacm_clusterdeploy_base_domain }}
        {{ ingress_floating_ip }} prometheus-k8s-openshift-monitoring.apps.{{ rhacm_clusterdeployment_name }}.{{ rhacm_clusterdeploy_base_domain }}
        {{ ingress_floating_ip }} thanos-querier-openshift-monitoring.apps.{{ rhacm_clusterdeployment_name }}.{{ rhacm_clusterdeploy_base_domain }}
        {% endif %}
    insertafter: "EOF"
    marker: "# {mark} {{ rhacm_clusterdeployment_name }} OCP CLUSTER MANAGED BLOCK"
  become: yes
  become_user: root
  throttle: 1

- name: Get custom subnet uuid
  shell: |
    source /home/stack/overcloudrc
    openstack subnet show {{ rhacm_clusterdeployment_name }}_subnet -f value -c id
  register: custom_subnet_uuid
  when: rhacm_clusterdeploy_custom_network

- name: Get custom subnet cidr
  shell: |
    source /home/stack/overcloudrc
    openstack subnet show {{ rhacm_clusterdeployment_name }}_subnet -f value -c cidr
  register: custom_subnet_cidr
  when: rhacm_clusterdeploy_custom_network

- name: Prepare Cluster Deployment configuration files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - src: install-config.yaml.j2
      dest: "/home/stack/clusterdeployments/configs/{{ rhacm_clusterdeployment_name }}/install-config.yaml"
    - src: clouds.yaml.j2
      dest: "/home/stack/clusterdeployments/configs/{{ rhacm_clusterdeployment_name }}/clouds.yaml"
    - src: all-cluster-deployment.yaml.j2
      dest: "/home/stack/clusterdeployments/configs/{{ rhacm_clusterdeployment_name }}/all-cluster-deployment.yaml"
    - src: hive-cluster-deployment.yaml.j2
      dest: "/home/stack/clusterdeployments/configs/{{ rhacm_clusterdeployment_name }}/hive-cluster-deployment.yaml"
    - src: deletable-cluster-deployment.yaml.j2
      dest: "/home/stack/clusterdeployments/configs/{{ rhacm_clusterdeployment_name }}/deletable-cluster-deployment.yaml"
    - src: objects.yaml.j2
      dest: "/home/stack/clusterdeployments/all/objects/{{ rhacm_clusterdeployment_name }}-objects.yaml"
    - src: cd.yaml.j2
      dest: "/home/stack/clusterdeployments/all/cd/{{ rhacm_clusterdeployment_name }}-cd.yaml"
    - src: mc.yaml.j2
      dest: "/home/stack/clusterdeployments/all/mc/{{ rhacm_clusterdeployment_name }}-mc.yaml"

- name: Copy cluster-deployment and deletable configs into all directory
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    remote_src: yes
  with_items:
    - src: "/home/stack/clusterdeployments/configs/{{ rhacm_clusterdeployment_name }}/all-cluster-deployment.yaml"
      dest: "/home/stack/clusterdeployments/all/deploy/{{ rhacm_clusterdeployment_name }}-cluster-deployment.yaml"
    - src: "/home/stack/clusterdeployments/configs/{{ rhacm_clusterdeployment_name }}/deletable-cluster-deployment.yaml"
      dest: "/home/stack/clusterdeployments/all/delete/{{ rhacm_clusterdeployment_name }}-deletable-cluster-deployment.yaml"
